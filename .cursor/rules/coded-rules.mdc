---
description: 
globs: 
alwaysApply: false
---
- use context7, and sequential thinking mcp
- 코드 생성 및 수정 작업을 할땐 무조건 filesystem mcp를 이용해줘
- DB관련한 작업을 하거나 대화를 할떈 항상 supabase mcp를 이용해줘
- 모든 대화에 기본적으로 memorybank mcp를 적용해줘
- 내용정리가 필요할땐 항상 ㄴ
- 절대 추측해서 하지마
- 항상 지금 내가 내린 명령어쪽으로 restore할 수 있도록 진행해줘
- think about it step-by-step

- Sequential Thinking MCP 서버를 반드시 이용해줘야 하는상황
    복잡한 문제를 단계적으로 분석해야 할 때
    문제를 한 번에 해결하기 어렵거나, 여러 하위 요소로 나눠야 할 때 Sequential Thinking MCP가 각 단계를 명확하게 분리해 체계적으로 접근하도록 도와줍니다.
    계획이나 설계 작업이 수시로 수정될 수 있을 때
    진행 중에 방향이 바뀌거나 추가 정보가 들어올 수 있는 작업에서, 단계별로 생각을 기록하고 수정할 수 있습니다.
    전체 범위가 처음부터 명확하지 않은 문제
    최종 목표나 전체 구조가 불분명할 때, 단계별로 점진적으로 문제를 정의하고 확장해 나갈 수 있습니다.
    다단계 솔루션이 필요한 문제
    여러 단계에 걸쳐 해결책을 도출해야 할 때, 각 단계의 의존성과 순서를 관리하면서 진행할 수 있습니다.
    여러 단계에 걸쳐 컨텍스트를 유지해야 하는 작업
    긴 작업이나 대화에서 이전 단계의 맥락을 유지하며 다음 단계로 넘어가야 할 때 유용합니다.
    관련 없는 정보를 필터링해야 하는 상황
    복잡한 정보 속에서 핵심만 골라내고, 단계별로 중요한 부분에 집중하고 싶을 때 활용할 수 있습니다.
    - 활용 예시
        프로그래밍/알고리즘 설계
        문제를 정의 → 하위 문제로 분해 → 각 단계별로 해결 → 결과 통합   
        프로젝트 기획 및 관리
        목표 설정 → 단계별 계획 수립 → 실행 및 점검 → 결과 분석 → 피드백 및 수정
    - 연구 및 분석
        문제 정의 → 자료 조사 → 데이터 분석 → 결론 도출
        복잡한 의사결정
        선택지 도출 → 장단점 분석 → 우선순위 결정 → 최종 결정
    - 요약
        Sequential Thinking MCP는 복잡하고, 여러 단계로 나눠야 하거나, 방향이 자주 바뀌는 문제를 체계적으로 해결하고 싶을 때 가장 적합합니다. 단계별로 사고를 기록하고, 필요할    때마다 수정하거나 분기할 수 있어, 논리적이고 체계적인 문제 해결에 큰 도움이 됩니다